#!/bin/bash
export COMPOSE_PROJECT_NAME=regtest

bitcoin-cli-sim() {
  docker exec regtest-bitcoind-1 bitcoin-cli -rpcuser=regtest -rpcpassword=regtest -regtest "$@"
}

elements-cli-sim() {
  docker exec regtest-elementsd-1 elements-cli "$@"
}

mempool-address() {
  curl localhost:8090/api/address/"$1" | jq .
}

mempool-liquid-address() {
  curl localhost:8091/api/address/"$1" | jq .
}

mempool-tx() {
  curl localhost:8090/api/tx/"$1" | jq .
}

mempool-liquid-tx() {
  curl localhost:8091/api/address/"$1" | jq .
}

# args(i, cmd)
lightning-cli-sim() {
  i=$1
  shift # shift first argument so we can use $@
  docker exec regtest-clightning-$i-1 lightning-cli --network regtest "$@"
}

# args(i, cmd)
lncli-sim() {
  i=$1
  shift # shift first argument so we can use $@
  docker exec regtest-lnd-$i-1 lncli --network regtest --rpcserver=lnd-$i:10009 "$@"
}

# args(i)
fund_clightning_node() {
  address=$(lightning-cli-sim $1 newaddr | jq -r .bech32)
  echo "funding: $address on clightning-node: $1"
  bitcoin-cli-sim -named sendtoaddress address=$address amount=30 fee_rate=100 > /dev/null
}

# args(i)
fund_lnd_node() {
  address=$(lncli-sim $1 newaddress p2wkh | jq -r .address)
  echo "funding: $address on lnd-node: $1"
  bitcoin-cli-sim -named sendtoaddress address=$address amount=30 fee_rate=100 > /dev/null
}

# args(i, j)
connect_clightning_node() {
  pubkey=$(lightning-cli-sim $2 getinfo | jq -r '.id')
  lightning-cli-sim $1 connect $pubkey@regtest-clightning-$2-1:9735 | jq -r '.id'
}

regtest-start(){
  if ! command -v jq &> /dev/null
  then
      echo "jq is not installed"
      exit
  fi
  if ! command -v docker &> /dev/null
  then
      echo "docker is not installed"
      exit
  fi
  if ! command -v docker version &> /dev/null
  then
      echo "dockerd is not running"
      exit
  fi
  regtest-stop
  docker compose up -d --remove-orphans
  sudo chown -R $USER ./data
  regtest-init
  deploy-contracts
}

regtest-start-log(){
  regtest-stop
  docker compose up --remove-orphans
  sudo chown -R $USER ./data
  regtest-init
}

regtest-stop(){
  docker compose down --volumes
  # clean up lightning node data
  sudo rm -rf ./data/clightning-1 ./data/lnd-1  ./data/lnd-2 ./data/boltz/boltz.db ./data/elements/liquidregtest ./data/bitcoin/regtest
  # recreate lightning node data folders preventing permission errors
  mkdir ./data/clightning-1 ./data/lnd-1 ./data/lnd-2
}

regtest-restart(){
  regtest-stop
  regtest-start
}

bitcoin-init(){
  echo "init_bitcoin_wallet..."
  bitcoin-cli-sim createwallet regtest || bitcoin-cli-sim loadwallet regtest
  echo "mining 150 bitcoin blocks..."
  bitcoin-cli-sim -generate 150 > /dev/null
}

elements-init(){
  elements-cli-sim createwallet regtest || elements-cli-sim loadwallet regtest true
  echo "mining 150 liquid blocks..."
  elements-cli-sim -generate 150 > /dev/null
  elements-cli-sim rescanblockchain 0 > /dev/null
}

regtest-init(){
  bitcoin-init
  elements-init
  lightning-sync
  lightning-init
}

lightning-sync(){
  wait-for-clightning-sync 1
  wait-for-lnd-sync 1
  wait-for-lnd-sync 2
}

lightning-init(){
  # create 10 UTXOs for each node
  for i in 0 1 2 3 4; do
    fund_clightning_node 1
    fund_lnd_node 1
    fund_lnd_node 2
  done

  echo "mining 3 blocks..."
  bitcoin-cli-sim -generate 3 > /dev/null

  lightning-sync

  channel_confirms=6
  channel_size=24000000 # 0.024 btc
  balance_size=12000000 # 0.12 btc
  balance_size_msat=12000000000 # 0.12 btc

  # lnd-1 -> lnd-2
  lncli-sim 1 connect $(lncli-sim 2 getinfo | jq -r '.identity_pubkey')@regtest-lnd-2-1 > /dev/null
  echo "open channel from lnd-1 to lnd-2"
  lncli-sim 1 openchannel $(lncli-sim 2 getinfo | jq -r '.identity_pubkey') $channel_size $balance_size > /dev/null
  bitcoin-cli-sim -generate $channel_confirms > /dev/null
  wait-for-lnd-channel 1

  # lnd-1 -> cln-1
  lncli-sim 1 connect $(lightning-cli-sim 1 getinfo | jq -r '.id')@regtest-clightning-1-1 > /dev/null
  echo "open channel from lnd-1 to cln-1"
  lncli-sim 1 openchannel $(lightning-cli-sim 1 getinfo | jq -r '.id') $channel_size $balance_size > /dev/null
  bitcoin-cli-sim -generate $channel_confirms > /dev/null
  wait-for-lnd-channel 1

  # lnd-2 -> cln-1
  lncli-sim 2 connect $(lightning-cli-sim 1 getinfo | jq -r '.id')@regtest-clightning-1-1 > /dev/null
  echo "open channel from lnd-2 to cln-1"
  lncli-sim 2 openchannel $(lightning-cli-sim 1 getinfo | jq -r '.id') $channel_size $balance_size > /dev/null
  bitcoin-cli-sim -generate $channel_confirms > /dev/null
  wait-for-lnd-channel 2
  wait-for-clightning-channel 1

  lightning-sync

}

wait-for-lnd-channel(){
  while true; do
    pending=$(lncli-sim $1 pendingchannels | jq -r '.pending_open_channels | length')
    echo "lnd-$1 pendingchannels: $pending"
    if [[ "$pending" == "0" ]]; then
      break
    fi
    sleep 1
  done
}

wait-for-lnd-sync(){
  while true; do
    if [[ "$(lncli-sim $1 getinfo 2>&1 | jq -r '.synced_to_chain' 2> /dev/null)" == "true" ]]; then
      echo "lnd-$1 is synced!"
      break
    fi
    echo "waiting for lnd-$1 to sync..."
    sleep 1
  done
}

wait-for-clightning-channel(){
  while true; do
    pending=$(lightning-cli-sim $1 getinfo | jq -r '.num_pending_channels | length')
    echo "cln-$1 pendingchannels: $pending"
    if [[ "$pending" == "0" ]]; then
      if [[ "$(lightning-cli-sim $1 getinfo 2>&1 | jq -r '.warning_bitcoind_sync' 2> /dev/null)" == "null" ]]; then
        if [[ "$(lightning-cli-sim $1 getinfo 2>&1 | jq -r '.warning_lightningd_sync' 2> /dev/null)" == "null" ]]; then
          break
        fi
      fi
    fi
    sleep 1
  done
}

wait-for-clightning-sync(){
  while true; do
    if [[ "$(lightning-cli-sim $1 getinfo 2>&1 | jq -r '.warning_bitcoind_sync' 2> /dev/null)" == "null" ]]; then
      if [[ "$(lightning-cli-sim $1 getinfo 2>&1 | jq -r '.warning_lightningd_sync' 2> /dev/null)" == "null" ]]; then
        echo "cln-$1 is synced!"
        break
      fi
    fi
    echo "waiting for cln-$1 to sync..."
    sleep 1
  done
}

deploy-contract() {
  docker compose exec anvil cast send --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --create $1
}

deploy-contracts() {
  # EtherSwap
  deploy-contract 0x608060405234801561001057600080fd5b50610888806100206000396000f3fe6080604052600436106100705760003560e01c80636fa4ae601161004e5780636fa4ae60146100d65780638b2f8f82146100e9578063c3c37fbc14610117578063eb84e7f21461013757600080fd5b80630899146b1461007557806335cd4ccb1461008a57806354fd4d50146100aa575b600080fd5b6100886100833660046106c4565b610177565b005b34801561009657600080fd5b506100886100a53660046106fc565b610188565b3480156100b657600080fd5b506100bf600281565b60405160ff90911681526020015b60405180910390f35b6100886100e436600461073b565b610253565b3480156100f557600080fd5b50610109610104366004610778565b6102ed565b6040519081526020016100cd565b34801561012357600080fd5b506100886101323660046106fc565b61034e565b34801561014357600080fd5b506101676101523660046107ca565b60006020819052908152604090205460ff1681565b60405190151581526020016100cd565b61018383348484610437565b505050565b438111156101eb5760405162461bcd60e51b815260206004820152602560248201527f4574686572537761703a207377617020686173206e6f742074696d6564206f756044820152641d081e595d60da1b60648201526084015b60405180910390fd5b60006101fa85858533866102ed565b905061020581610579565b600081815260208190526040808220805460ff191690555186917f3fbd469ec3a5ce074f975f76ce27e727ba21c99176917b97ae2e713695582a1291a261024c33856105fb565b5050505050565b8034116102c85760405162461bcd60e51b815260206004820152603d60248201527f4574686572537761703a2073656e7420616d6f756e74206d757374206265206760448201527f726561746572207468616e207468652070726570617920616d6f756e7400000060648201526084016101e2565b6102dd846102d683346107e3565b8585610437565b6102e783826105fb565b50505050565b60408051602081018790529081018590526bffffffffffffffffffffffff19606085811b82168184015284901b1660748201526088810182905260009060a80160405160208183030381529060405280519060200120905095945050505050565b600060028560405160200161036591815260200190565b60408051601f198184030181529082905261037f9161080a565b602060405180830381855afa15801561039c573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103bf9190610839565b905060006103d082863387876102ed565b90506103db81610579565b60008181526020818152604091829020805460ff19169055905187815283917f5664142af3dcfc3dc3de45a43f75c746bd1d8c11170a5037fdf98bdb35775137910160405180910390a261042f33866105fb565b505050505050565b600083116104995760405162461bcd60e51b815260206004820152602960248201527f4574686572537761703a206c6f636b656420616d6f756e74206d757374206e6f60448201526874206265207a65726f60b81b60648201526084016101e2565b60006104a885858533866102ed565b60008181526020819052604090205490915060ff161561050a5760405162461bcd60e51b815260206004820152601e60248201527f4574686572537761703a20737761702065786973747320616c7265616479000060448201526064016101e2565b60008181526020818152604091829020805460ff1916600117905581518681526001600160a01b03861691810191909152908101839052339086907f15b4b8206809535e547317cd5cedc86cff6e7d203551f93701786ddaf14fd9f99060600160405180910390a35050505050565b60008181526020819052604090205460ff1615156001146105f85760405162461bcd60e51b815260206004820152603360248201527f4574686572537761703a207377617020686173206e6f204574686572206c6f636044820152721ad959081a5b881d1a194818dbdb9d1c9858dd606a1b60648201526084016101e2565b50565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610648576040519150601f19603f3d011682016040523d82523d6000602084013e61064d565b606091505b50509050806101835760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201526732b91022ba3432b960c11b60648201526084016101e2565b6001600160a01b03811681146105f857600080fd5b6000806000606084860312156106d957600080fd5b8335925060208401356106eb816106af565b929592945050506040919091013590565b6000806000806080858703121561071257600080fd5b8435935060208501359250604085013561072b816106af565b9396929550929360600135925050565b6000806000806080858703121561075157600080fd5b843593506020850135610763816106af565b93969395505050506040820135916060013590565b600080600080600060a0868803121561079057600080fd5b853594506020860135935060408601356107a9816106af565b925060608601356107b9816106af565b949793965091946080013592915050565b6000602082840312156107dc57600080fd5b5035919050565b8181038181111561080457634e487b7160e01b600052601160045260246000fd5b92915050565b6000825160005b8181101561082b5760208186018101518583015201610811565b506000920191825250919050565b60006020828403121561084b57600080fd5b505191905056fea264697066735822122054a8d058c2b2f5d6e98f2aed23c4e6d77fe2be946317c47a6480526e17deaeb764736f6c63430008150033

  # ERC20Swap
  deploy-contract 0x608060405234801561001057600080fd5b50610a59806100206000396000f3fe6080604052600436106100705760003560e01c806391644b2b1161004e57806391644b2b146100f1578063b8080ab814610111578063cd413efa14610124578063eb84e7f21461014457600080fd5b8063365047211461007557806354fd4d50146100975780637beb9d6d146100c3575b600080fd5b34801561008157600080fd5b506100956100903660046108e0565b610184565b005b3480156100a357600080fd5b506100ac600281565b60405160ff90911681526020015b60405180910390f35b3480156100cf57600080fd5b506100e36100de366004610932565b610252565b6040519081526020016100ba565b3480156100fd57600080fd5b5061009561010c3660046108e0565b6102be565b61009561011f3660046108e0565b610421565b34801561013057600080fd5b5061009561013f3660046108e0565b61043f565b34801561015057600080fd5b5061017461015f366004610999565b60006020819052908152604090205460ff1681565b60405190151581526020016100ba565b438111156101e75760405162461bcd60e51b815260206004820152602560248201527f4552433230537761703a207377617020686173206e6f742074696d6564206f756044820152641d081e595d60da1b60648201526084015b60405180910390fd5b60006101f7868686863387610252565b90506102028161052b565b600081815260208190526040808220805460ff191690555187917f3fbd469ec3a5ce074f975f76ce27e727ba21c99176917b97ae2e713695582a1291a261024a8433876105ae565b505050505050565b60408051602081018890529081018690526bffffffffffffffffffffffff19606086811b82168184015285811b8216607484015284901b166088820152609c810182905260009060bc016040516020818303038152906040528051906020012090509695505050505050565b600084116103205760405162461bcd60e51b815260206004820152602960248201527f4552433230537761703a206c6f636b656420616d6f756e74206d757374206e6f60448201526874206265207a65726f60b81b60648201526084016101de565b61032c833330876106da565b600061033c868686863387610252565b60008181526020819052604090205490915060ff161561039e5760405162461bcd60e51b815260206004820152601e60248201527f4552433230537761703a20737761702065786973747320616c7265616479000060448201526064016101de565b60008181526020819052604090819020805460ff1916600117905551339087907fa98eaa2bd8230d87a1a4c356f5c1d41cb85ff88131122ec8b1931cb9d31ae145906104119089908990899089909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a3505050505050565b61042e85858585856102be565b6104388234610812565b5050505050565b600060028660405160200161045691815260200190565b60408051601f1981840301815290829052610470916109b2565b602060405180830381855afa15801561048d573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104b091906109e1565b905060006104c2828787338888610252565b90506104cd8161052b565b60008181526020818152604091829020805460ff19169055905188815283917f5664142af3dcfc3dc3de45a43f75c746bd1d8c11170a5037fdf98bdb35775137910160405180910390a26105228533886105ae565b50505050505050565b60008181526020819052604090205460ff1615156001146105ab5760405162461bcd60e51b815260206004820152603460248201527f4552433230537761703a207377617020686173206e6f20746f6b656e73206c6f60448201527318dad959081a5b881d1a194818dbdb9d1c9858dd60621b60648201526084016101de565b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161060a91906109b2565b6000604051808303816000865af19150503d8060008114610647576040519150601f19603f3d011682016040523d82523d6000602084013e61064c565b606091505b509150915081801561067657508051158061067657508080602001905181019061067691906109fa565b6104385760405162461bcd60e51b815260206004820152602f60248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201526e657220455243323020746f6b656e7360881b60648201526084016101de565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161073e91906109b2565b6000604051808303816000865af19150503d806000811461077b576040519150601f19603f3d011682016040523d82523d6000602084013e610780565b606091505b50915091508180156107aa5750805115806107aa5750808060200190518101906107aa91906109fa565b61024a5760405162461bcd60e51b815260206004820152603360248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366604482015272657246726f6d20455243323020746f6b656e7360681b60648201526084016101de565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b50509050806108c65760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201526732b91022ba3432b960c11b60648201526084016101de565b505050565b6001600160a01b03811681146105ab57600080fd5b600080600080600060a086880312156108f857600080fd5b85359450602086013593506040860135610911816108cb565b92506060860135610921816108cb565b949793965091946080013592915050565b60008060008060008060c0878903121561094b57600080fd5b86359550602087013594506040870135610964816108cb565b93506060870135610974816108cb565b92506080870135610984816108cb565b8092505060a087013590509295509295509295565b6000602082840312156109ab57600080fd5b5035919050565b6000825160005b818110156109d357602081860181015185830152016109b9565b506000920191825250919050565b6000602082840312156109f357600080fd5b5051919050565b600060208284031215610a0c57600080fd5b81518015158114610a1c57600080fd5b939250505056fea2646970667358221220b2d74be31528fcf5f303eaccc5b663734841ac045bee9e9388eaa26ee13bdf3964736f6c63430008150033
}
